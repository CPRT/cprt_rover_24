FROM --platform=linux/arm64 ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV ROS_DISTRO=humble
ENV ROS_VERSION=2
ENV ROS_PYTHON_VERSION=3
ENV ROS_LOCALHOST_ONLY=0
ENV ROS_DOMAIN_ID=0

# Install base packages and ROS keys
RUN apt-get update && apt-get install -y \
    git \
    curl \
    lsb-release \
    gnupg2 \
    locales \
    libc6-dev \
    software-properties-common && \
    locale-gen en_US.UTF-8

# Set up ROS 2 repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=arm64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
    > /etc/apt/sources.list.d/ros2.list

# Install ROS 2 and development tools
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
    ros-humble-desktop \
    ros-dev-tools \
    python3-dev \
    python3-pip \
    clang-format \
    clang-tidy \
    ninja-build \
    ros-humble-rosbridge-server \
    ros-humble-rclcpp 

# Install Python packages
RUN pip3 install --no-cache-dir \
    black \
    pylint \
    pyserial \
    adafruit-circuitpython-lis3dh \
    adafruit-circuitpython-pca9685 \
    adafruit-circuitpython-motorkit \
    Adafruit-Blinka \
    adafruit-circuitpython-bme280 \
    adafruit-circuitpython-ens160 \
    adafruit-circuitpython-busdevice \
    adafruit-circuitpython-register \
    pyubx2 \
    RPi.GPIO

# Set project directory
ARG DIR=/cprt_rover_24
WORKDIR ${DIR}

# Copy workspace into container
COPY . ${DIR}

# Set up rosdep and install dependencies
# TODO: Fix rosdep dependancies so we don't need to use || true
RUN apt-get update && \
    rosdep init && \
    rosdep update && \
    rosdep install --from-paths src -i -r -y || true

RUN ldconfig

ARG SKIP_PACKAGES="zed_components camera_streaming kindr_ros elevation_mapping zed_wrapper zed_ros2"

# Build the workspace
RUN bash -c "source /opt/ros/humble/setup.bash && ldconfig && colcon build --symlink-install --continue-on-error --packages-skip ${SKIP_PACKAGES} --cmake-args -DCMAKE_BUILD_TYPE=Release"


# Create entrypoint script
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'source /opt/ros/humble/setup.bash' >> /entrypoint.sh && \
    echo 'if [ -f /cprt_rover_24/install/setup.bash ]; then source /cprt_rover_24/install/setup.bash; fi' >> /entrypoint.sh && \
    echo 'exec "$@"' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
