name: Docker CI/CD Multi-Arch

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: cprtsoftware/rover

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_NAME: ${{ env.IMAGE_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  build-amd64:
    runs-on: ubuntu-latest
    needs: setup
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.IMAGE_NAME }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build amd64 image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg TARGETARCH=amd64 \
            -t $IMAGE_NAME:amd64 \
            -t $IMAGE_NAME:${{ github.sha }}-amd64 \
            --cache-from=type=registry,ref=$IMAGE_NAME:amd64-cache \
            --cache-to=type=registry,ref=$IMAGE_NAME:amd64-cache,mode=max \
            --load \
            .

  build-arm64:
    runs-on: ubuntu-latest
    needs: setup
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.IMAGE_NAME }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build arm64 image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --build-arg TARGETARCH=arm64 \
            -t $IMAGE_NAME:arm64 \
            -t $IMAGE_NAME:${{ github.sha }}-arm64 \
            --cache-from=type=registry,ref=$IMAGE_NAME:arm64-cache \
            --cache-to=type=registry,ref=$IMAGE_NAME:arm64-cache,mode=max \
            --load \
            .

  push-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.IMAGE_NAME }}
    steps:
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-arch manifest (latest)
        run: |
          docker manifest create $IMAGE_NAME:latest \
            $IMAGE_NAME:amd64 \
            $IMAGE_NAME:arm64
          docker manifest push $IMAGE_NAME:latest

      - name: Create and push multi-arch manifest (commit SHA)
        run: |
          docker manifest create $IMAGE_NAME:${{ github.sha }} \
            $IMAGE_NAME:${{ github.sha }}-amd64 \
            $IMAGE_NAME:${{ github.sha }}-arm64
          docker manifest push $IMAGE_NAME:${{ github.sha }}
