ARG IMAGE=ubuntu:22.04

FROM ${IMAGE} AS ros2_humble-base

ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble
ENV ROS_VERSION=2
ENV ROS_PYTHON_VERSION=3
ENV ROS_LOCALHOST_ONLY=0
ENV ROS_DOMAIN_ID=0

RUN apt-get update && apt-get install -y locales apt-utils \
    && locale-gen en_US.UTF-8 \
    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \
    && rm -rf /var/lib/apt/lists/*

ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Install base packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    lsb-release \
    gnupg2 \
    libc6-dev \
    software-properties-common \
    iproute2 \
    busybox && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up ROS 2 repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
    -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu \
    $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
    > /etc/apt/sources.list.d/ros2.list

# Install ROS 2 
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    python3-dev \
    python3-pip \
    ros-humble-ros-base && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir \
    pyserial \
    adafruit-circuitpython-lis3dh \
    adafruit-circuitpython-pca9685 \
    adafruit-circuitpython-motorkit \
    Adafruit-Blinka \
    adafruit-circuitpython-bme280 \
    adafruit-circuitpython-ens160 \
    adafruit-circuitpython-busdevice \
    adafruit-circuitpython-register \
    pyubx2 \
    black \
    RPi.GPIO \
    rpi-hardware-pwm \
    Jetson.GPIO


FROM ros2_humble-base AS rosdeps

RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    ros-humble-desktop \
    ros-dev-tools \
    python3-rosdep && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set project directory
ARG DIR=/cprt_rover_24
WORKDIR ${DIR}

# Copy workspace into container
COPY src/**/package.xml src/**/setup.py src/**/CMakeLists.txt ./src

ARG FILE=/opt/rosdeps.sh

# Generate list of rosdep dependencies to be installed later
RUN apt-get update && \
    rosdep init && \
    rosdep update && \
    rosdep install -i -r -y --from-paths src -s > ${FILE}

FROM ${IMAGE} AS gstreamer

RUN apt-get update && \
    apt-get install -y \
        zlib1g-dev \
        libffi-dev \
        libssl-dev \
        python3-dev \
        python3-pip \
        flex \
        bison \
        libglib2.0-dev \
        libmount-dev \
        libsrt-openssl-dev \
        git \
        ninja-build \
        curl

RUN python3 -m pip install --upgrade pip && \
    pip3 install --user meson

WORKDIR /gstreamer

# Install GStreamer and plugins
RUN git clone https://gitlab.freedesktop.org/gstreamer/gstreamer.git && \
    cd gstreamer && \
    git checkout 1.24 && \
    ~/.local/bin/meson setup builddir --prefix=/opt/gstreamer --libdir=lib && \
    ~/.local/bin/meson compile -C builddir && \
    ~/.local/bin/meson install -C builddir --destdir /target

WORKDIR /gst-plugins-rs
ENV LD_LIBRARY_PATH=/target/opt/gstreamer/lib:$LD_LIBRARY_PATH 
ENV LIBRARY_PATH=/target/opt/gstreamer/lib:$LIBRARY_PATH 
ENV PKG_CONFIG_PATH=/target/opt/gstreamer/lib/pkgconfig:$PKG_CONFIG_PATH 

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
    . "$HOME/.cargo/env" && \
    git clone https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs.git && \
    cd gst-plugins-rs && \
    cargo install cargo-c && \
    cargo cbuild -p gst-plugin-webrtc --prefix=/opt/gstreamer --release && \
    cargo cbuild -p gst-plugin-rtp --prefix=/opt/gstreamer --release && \
    cargo cinstall -p gst-plugin-webrtc --prefix=/opt/gstreamer --destdir /target --libdir=lib --release && \
    cargo cinstall -p gst-plugin-rtp --prefix=/opt/gstreamer --destdir /target --libdir=lib --release

FROM ros2_humble-base AS base
ARG ROSDEP_FILE=/opt/rosdeps.sh
COPY --from=rosdeps ${ROSDEP_FILE} ${ROSDEP_FILE}
COPY --from=gstreamer /target /
COPY setup/enablecan.sh /usr/local/bin/enablecan.sh

# Setup gstreamer enviorment
ENV PATH=/opt/gstreamer/bin:$PATH 
ENV LD_LIBRARY_PATH=/opt/gstreamer/lib:$LD_LIBRARY_PATH 
ENV PKG_CONFIG_PATH=/opt/gstreamer/lib/pkgconfig:$PKG_CONFIG_PATH 
ENV GST_PLUGIN_PATH=/opt/gstreamer/lib/gstreamer-1.0:/usr/lib/aarch64-linux-gnu/gstreamer-1.0

# Install rosdep dependencies
RUN apt-get update && \
    chmod +x ${ROSDEP_FILE} && \
    ${ROSDEP_FILE} && \
    rm -rf /var/lib/apt/lists/*

CMD ["/bin/bash"]
